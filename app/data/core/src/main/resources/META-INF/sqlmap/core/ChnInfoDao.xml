<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinhui.scheduler.data.core.mapper.core.ChnInfoDao" >
  <resultMap id="BaseResultMap" type="com.jinhui.scheduler.domain.core.ChnInfo" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code_name" property="codeName" jdbcType="VARCHAR" />
    <result column="chn_code" property="chnCode" jdbcType="CHAR" />
    <result column="chn_name" property="chnName" jdbcType="VARCHAR" />
    <result column="id_type" property="idType" jdbcType="CHAR" />
    <result column="id_no" property="idNo" jdbcType="CHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="artificial" property="artificial" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="total_limit" property="totalLimit" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    id, code_name, chn_code, chn_name, id_type, id_no, contacts, artificial, adress, 
    phone, total_limit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from chn_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from chn_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jinhui.scheduler.domain.core.ChnInfo" >
    <!--
      WARNING - @mbggenerated
    -->
    insert into chn_info (id, code_name, chn_code, 
      chn_name, id_type, id_no, contacts, 
      artificial, adress, phone, 
      total_limit)
    values (#{id,jdbcType=INTEGER}, #{codeName,jdbcType=VARCHAR}, #{chnCode,jdbcType=CHAR}, 
      #{chnName,jdbcType=VARCHAR}, #{idType,jdbcType=CHAR}, #{idNo,jdbcType=CHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{artificial,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{totalLimit,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.jinhui.scheduler.domain.core.ChnInfo" >
    <!--
      WARNING - @mbggenerated
    -->
    insert into chn_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="codeName != null" >
        code_name,
      </if>
      <if test="chnCode != null" >
        chn_code,
      </if>
      <if test="chnName != null" >
        chn_name,
      </if>
      <if test="idType != null" >
        id_type,
      </if>
      <if test="idNo != null" >
        id_no,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="artificial != null" >
        artificial,
      </if>
      <if test="adress != null" >
        adress,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="totalLimit != null" >
        total_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="codeName != null" >
        #{codeName,jdbcType=VARCHAR},
      </if>
      <if test="chnCode != null" >
        #{chnCode,jdbcType=CHAR},
      </if>
      <if test="chnName != null" >
        #{chnName,jdbcType=VARCHAR},
      </if>
      <if test="idType != null" >
        #{idType,jdbcType=CHAR},
      </if>
      <if test="idNo != null" >
        #{idNo,jdbcType=CHAR},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="artificial != null" >
        #{artificial,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        #{adress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="totalLimit != null" >
        #{totalLimit,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinhui.scheduler.domain.core.ChnInfo" >
    <!--
      WARNING - @mbggenerated
    -->
    update chn_info
    <set >
      <if test="codeName != null" >
        code_name = #{codeName,jdbcType=VARCHAR},
      </if>
      <if test="chnCode != null" >
        chn_code = #{chnCode,jdbcType=CHAR},
      </if>
      <if test="chnName != null" >
        chn_name = #{chnName,jdbcType=VARCHAR},
      </if>
      <if test="idType != null" >
        id_type = #{idType,jdbcType=CHAR},
      </if>
      <if test="idNo != null" >
        id_no = #{idNo,jdbcType=CHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="artificial != null" >
        artificial = #{artificial,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        adress = #{adress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="totalLimit != null" >
        total_limit = #{totalLimit,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinhui.scheduler.domain.core.ChnInfo" >
    <!--
      WARNING - @mbggenerated
    -->
    update chn_info
    set code_name = #{codeName,jdbcType=VARCHAR},
      chn_code = #{chnCode,jdbcType=CHAR},
      chn_name = #{chnName,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=CHAR},
      id_no = #{idNo,jdbcType=CHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      artificial = #{artificial,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      total_limit = #{totalLimit,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="queryChnInfoList" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" /> from chn_info
  </select>


  <select id="selectByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from chn_info
    where chn_name = #{chnName}

  </select>


  <update id="updateLimit" >
    update chn_info set
    `total_limit` = #{totalLimit}
    where chn_code = #{chnCode}
  </update>

</mapper>